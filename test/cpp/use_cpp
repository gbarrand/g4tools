
cpp_compiler=cpp_not_defined

if [ ${build_icc} = "yes" ] ; then
  cpp_compiler=icpc
  cpp_linker=icpc
else
  if [ ${build_clang} = "yes" ] ; then
    cpp_compiler=clang++
    cpp_linker=clang++
  else
    if [ ${build_cl_exe} = "yes" ] ; then
      cpp_compiler=./vc++
      cpp_linker=./vc++
    else
      cpp_compiler=c++
      cpp_linker=c++
    fi
  fi
fi

cppflags=
G4_cppflags=
if [ ${build_cl_exe} = "yes" ] ; then

  #cppflags="${cppflags} -DWIN32" 

  if [ ${build_mem} = "yes" ] ; then
    cppflags="${cppflags} -DTOOLS_MEM"
  fi

  cppflags="${cppflags} -I.."

else

  if [ ${build_debug} = "yes" ] ; then
    cppflags="${cppflags} -g"
  else
    cppflags="${cppflags} -O2"
  fi

  if [ ${build_mem} = "yes" ] ; then
    cppflags="${cppflags} -DTOOLS_MEM"
  fi

  if [ ${build_icc} = "yes" ] ; then
    G4_cppflags="-ansi -Wno-non-virtual-dtor -Wwrite-strings -Wpointer-arith -Woverloaded-virtual"
  else
    if [ ${build_clang} = "yes" ] ; then
      G4_cppflags="-Wno-non-virtual-dtor -Wwrite-strings -Wpointer-arith -Woverloaded-virtual"
    else
      G4_cppflags="-W -Wall -pedantic -Wno-non-virtual-dtor -Wno-long-long -Wwrite-strings -Wpointer-arith -Woverloaded-virtual"
      if [ `uname` != Darwin ] ; then
        # now the default compiler is clang that does not support -ansi.
        G4_cppflags="${G4_cppflags} -ansi"
      fi
      G4_cppflags="${G4_cppflags} -Wshadow"
    fi
  fi

fi

cppflags0="${cppflags}"
