// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file tools.license for terms.

#ifndef tools_sys_thread
#define tools_sys_thread

#ifdef _WIN32

#include <windows.h>

class pthread_t {
public:
  pthread_t():m_id(0),m_handle(0){}
  virtual ~pthread_t() {close();}
public:
  void close() {
    if(m_handle) ::CloseHandle(m_handle);
    m_handle = 0;
  }
public:
  DWORD  m_id;
  HANDLE m_handle;
};

inline int pthread_create(pthread_t* a_thread,void*,void*(*a_func)(void*),void* a_tag){
  a_thread->m_handle = ::CreateThread(0,0,(LPTHREAD_START_ROUTINE)a_func,a_tag,0,(DWORD*)&(a_thread->m_id));
  if(a_thread->m_handle==INVALID_HANDLE_VALUE) return 1;
  return 0;
}

#else

#include <pthread.h>

#endif

#endif
